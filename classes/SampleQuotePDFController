/** 
*
*   Title     : SampleQuotePDFController
*   Author    : To A Finish
*   Purpose   : This class returns a list of quote line items
*   Revisions : 12/14/2014 - To A Finish (KS) Original
*               11/29/2017 - To A Finish (JD) move to Quotes
*               
*         NOTE: Assumes a custom lookup field Quote__c in the Signature object
*
**/

public class SampleQuotePDFController {
    public contact con{get;set;}
    public Quote qte{get;set;}
    public signature__signature__c sig;
    public String attachmentid { get; set; }
    public SampleQuotePDFController(Apexpages.StandardController controller){
        Id sigId = ApexPages.currentPage().getParameters().get('Id');
        if(sigId<>null){
            sig = [Select id,signature__Contact__c, Quote__c 
                   from signature__signature__c 
                   where id=:sigId
                   limit 1];
        }
        if(sig<>null && sig.id<>null && sig.signature__Contact__c<>null){
            try{
                con=[select firstname,lastname,email,phone 
                     from contact 
                     where id=:sig.signature__Contact__c
                     limit 1];
                if(Schema.SObjectType.Attachment.isAccessible()) {
                    attachmentid = [select id 
                                    from Attachment 
                                    where parentId=:sig.Id 
                                    and name like 'Signature%' 
                                    order by createdDate desc 
                                    limit 1].id;
                }
            }
            catch(Exception e){system.debug('$$$Exception :'+e);}
        }
        if(sig<>null && sig.id<>null && sig.Quote__c<>null){
            try{
                qte=[select id,name,grandtotal,account.name,account.billingstreet,
                     account.billingcity,account.billingstate,account.billingcountry,account.billingpostalcode 
                     from quote 
                     where id=:sig.Quote__c
                     limit 1];              
            }
            catch(Exception e){system.debug('$$$Exception :'+e);}
        }
    }
    
    public List < QuoteLineItem > getQuoteline(){
        if(sig<>null && sig.id<>null && sig.Quote__c<>null){
            List<QuoteLineItem> lineItemList = [select id,quoteid,unitprice,pricebookEntry.Product2.Name,
                                                      Quantity,TotalPrice 
                                                      from QuoteLineItem 
                                                      where QuoteId=:sig.Quote__c
                                                      order by Product2.Name
                                                      limit 1000];
            return lineItemList;
        }
        return null;
    }
}
