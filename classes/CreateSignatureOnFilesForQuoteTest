@isTest
private class CreateSignatureOnFilesForQuoteTest{
  @isTest
  static void itShould()
  {
    Account acc = new Account (name='Acme');
    insert acc;

    contact con=new contact();
    con.firstname='test';
    con.lastname='test';
    con.email='testing@gmail.com';
    con.AccountId= acc.Id;
    insert con;

    Opportunity opp= new Opportunity ();
    opp.name= 'Testopp';
    Opp.Accountid= acc.id;
    opp.CloseDate= date.today();
    opp.StageName= 'Qualification';
    insert opp;

    Pricebook2 pb = new Pricebook2(Name = 'Standard Price Book 2009', Description = 'Price Book 2009 Products', IsActive = true );
    insert pb;
    Product2 prod = new Product2(Name = 'SLA: Bronze', IsActive = true);
    insert prod;
    PricebookEntry pbe=new PricebookEntry(unitprice=0.01,Product2Id=prod.Id, Pricebook2Id=Test.getStandardPricebookId(), IsActive= true); 
    insert pbe;   

    Quote q= new Quote ();
    q.Name= 'Testq';
    q.OpportunityId= Opp.id;
    q.BillingStreet= '123';
    q.BillingCity= 'City';
    q.BillingPostalCode= '12345';
    q.Pricebook2Id= pb.id;
    insert q;

    ContentVersion content=new ContentVersion(); 
    content.Title='Header_Picture1'; 
    content.PathOnClient='/' + content.Title + '.jpg'; 
    Blob bodyBlob=Blob.valueOf('Unit Test ContentVersion Body'); 
    content.VersionData=bodyBlob; 
    content.origin = 'H';
    insert content;

    ContentDocumentLink contentlink=new ContentDocumentLink();
    contentlink.LinkedEntityId=acc.id;
    contentlink.contentdocumentid=[select contentdocumentid from contentversion where id =: content.id].contentdocumentid;
    contentlink.ShareType = 'V';
    contentlink.LinkedEntityId=q.id;
    insert contentlink;
  }   
}
